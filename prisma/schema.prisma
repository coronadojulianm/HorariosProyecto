generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Actividades {
  id_actividad  Int         @id @default(autoincrement())
  descripcion   String?     @db.VarChar(200)
  fecha         DateTime?
  evidencia     String?     @db.VarChar(100)
  instructor    String?     @db.VarChar(50)
  productiva    Int?
  productiva_fk Productiva? @relation(fields: [productiva], references: [id_productiva])

  @@index([productiva], name: "actividad_seguimiento")
}

model Ambientes {
  id_ambiente  Int        @id @default(autoincrement())
  nombre_amb   String?    @db.VarChar(80)
  municipio    Int?
  sede         Sede?
  estado       Estado?
  municipio_fk Municipios? @relation(fields: [municipio], references: [id_municipio])
  Horario      Horarios[]

  @@index([municipio], name: "municipio_ambiente")
}

model Areas {
  id_area     Int           @id @default(autoincrement())
  nombre_area String?       @db.VarChar(80)
  Vinculacion Vinculacion[]
}

model Asignaciones {
  id_asignacion Int               @id @default(autoincrement())
  fecha_inicio  DateTime?
  fecha_fin     DateTime?
  productiva    Int?
  instructor    Int?
  estado        EstadoAsignacion?
  productiva_fk Productiva?       @relation(fields: [productiva], references: [id_productiva])
  instructor_fk Vinculacion?      @relation(fields: [instructor], references: [id_vinculacion])

  @@index([instructor], name: "asignacion_vinculacacion")
  @@index([productiva], name: "asignacion_practica")
}

model Bitacoras {
  id_bitacora    Int             @id @default(autoincrement())
  fecha          DateTime?
  bitacora       BitacoraEnum?
  seguimiento    Int?
  archivo        String?         @db.VarChar(100)
  estado         EstadoBitacora?
  instructor     String?         @db.VarChar(50)
  seguimiento_fk Seguimientos?    @relation(fields: [seguimiento], references: [id_seguimiento])

  @@index([seguimiento], name: "seguimiento_bitacora")
}

model Empresa {
  id_empresa   Int          @id @default(autoincrement())
  razon_social String?      @db.VarChar(80)
  direccion    String?      @db.VarChar(80)
  telefono     String?      @db.VarChar(20)
  correo       String?      @db.VarChar(80)
  municipio    Int?
  estado       Estado?
  municipio_fk Municipios?   @relation(fields: [municipio], references: [id_municipio])
  Productiva   Productiva[]

  @@index([municipio], name: "empresa_minicipio")
}

model Fichas {
  codigo       Int          @id
  inicio_ficha DateTime?
  fin_lectiva  DateTime?
  fin_ficha    DateTime?
  programa     Int?
  sede         Sede?
  estado       EstadoFicha?
  programa_fk  Programas?    @relation(fields: [programa], references: [id_programa])
  Horario      Horarios[]
  Matricula    Matriculas[]

  @@index([programa], name: "ficha_programa")
}

model Horarios {
  id_horario     Int            @id @default(autoincrement())
  fecha_inicio   DateTime?
  hora_inicio    DateTime?      @db.Time
  fecha_fin      DateTime?
  hora_fin       DateTime?      @db.Time
  dia            Dia?
  cantidad_horas Int?
  instructor     Int?
  ficha          Int?
  ambiente       Int?
  estado         EstadoHorario?
  ambiente_fk    Ambientes?      @relation(fields: [ambiente], references: [id_ambiente])
  ficha_fk       Fichas?         @relation(fields: [ficha], references: [codigo])
  instructor_fk  Vinculacion?   @relation(fields: [instructor], references: [id_vinculacion])

  @@index([ambiente], name: "hoario_ambiente")
  @@index([ficha], name: "horario_ficha")
  @@index([instructor], name: "vinculacion_horario")
}

model Matriculas {
  id_matricula            Int              @id @default(autoincrement())
  ficha                   Int?
  aprendiz                Int?
  estado                  EstadoMatricula?
  pendiente_tecnicos      Int?
  pendiente_transversales Int?
  pendiente_ingles        Int?
  ficha_fk                Fichas?           @relation(fields: [ficha], references: [codigo])
  aprendiz_fk             Personas?         @relation(fields: [aprendiz], references: [id_persona])
  Productiva              Productiva[]

  @@unique([ficha, aprendiz], name: "uiniquematricula")
  @@index([aprendiz], name: "matriculas_personas")
}

model Municipios {
  id_municipio Int        @id @default(autoincrement())
  nombre_mpio  String?    @db.VarChar(80)
  departamento String?    @db.VarChar(80)
  Ambiente     Ambientes[]
  Empresa      Empresa[]
  Persona      Personas[]
}

model Personas {
  id_persona     Int           @id @default(autoincrement())
  identificacion BigInt?
  nombres        String?       @db.VarChar(80)
  correo         String?       @db.VarChar(80)
  telefono       String?       @db.VarChar(40)
  password       String?       @db.VarChar(25)
  rol            Rol?
  cargo          Cargo?
  municipio      Int?
  municipio_fk   Municipios?    @relation(fields: [municipio], references: [id_municipio])
  Matricula      Matriculas[]
  Vinculacion    Vinculacion[]

  @@unique([identificacion], name: "identificacion_unique")
  @@index([municipio], name: "persona_municipio")
}

model Productiva {
  id_productiva Int               @id @default(autoincrement())
  matricula     Int?
  empresa       Int?
  fecha_inicio  DateTime?
  fecha_fin     DateTime?
  alternativa   Alternativa?
  estado        EstadoProductiva?
  acuerdo       String?           @db.VarChar(100)
  arl           String?           @db.VarChar(100)
  consulta      String?           @db.VarChar(100)
  matricula_fk  Matriculas?        @relation(fields: [matricula], references: [id_matricula])
  empresa_fk    Empresa?          @relation(fields: [empresa], references: [id_empresa])
  actividades   Actividades[]
  Asignacion    Asignaciones[]
  Seguimiento   Seguimientos[]

  @@index([empresa], name: "empresa_matricula")
  @@index([matricula], name: "aprendiz_matricula")
}

model Programas {
  id_programa     Int     @id @default(autoincrement())
  nombre_programa String? @db.VarChar(80)
  sigla           String? @db.VarChar(20)
  nivel           Nivel?
  estado          Estado?
  Ficha           Fichas[]
}

model Seguimientos {
  id_seguimiento Int                @id @default(autoincrement())
  fecha          DateTime?
  seguimiento    SeguimientoEnum?
  productiva     Int?
  estado         EstadoSeguimiento?
  archivo        String?            @db.VarChar(100)
  instructor     String?            @db.VarChar(50)
  productiva_fk  Productiva?        @relation(fields: [productiva], references: [id_productiva])
  Bitacora       Bitacoras[]

  @@index([productiva], name: "matricula_aprenidiz")
}

model Vinculacion {
  id_vinculacion Int          @id @default(autoincrement())
  instructor     Int?
  tipo           Tipo?
  sede           Sede?
  area           Int?
  area_fk        Areas?        @relation(fields: [area], references: [id_area])
  instructor_fk  Personas?     @relation(fields: [instructor], references: [id_persona])
  Asignacion     Asignaciones[]
  Horario        Horarios[]

  @@index([instructor], name: "vinculacion_horario")
  @@index([area], name: "vinculacion_area")
}

enum Sede {
  centro
  yamboro
}

enum Estado {
  activo
  inactivo
}

enum EstadoAsignacion {
  Activo
  Inactivo
}

enum BitacoraEnum {
  ONE
  TWO
  THREE
  FOUR
  FIVE
  SIX
  SEVEN
  EIGHT
  NINE
  TEN
  ELEVEN
  TWELVE
}

enum EstadoBitacora {
  solicitud
  aprobado
  no_aprobado
}

enum Dia {
  lunes
  martes
  miercoles
  jueves
  viernes
  sabados
  domingo
}

enum EstadoHorario {
  solicitud
  aprobado
  no_aprobado
}

enum EstadoMatricula {
  Induccion
  Formacion
  Condicionado
  Cancelado
  RetiroVoluntario
  PorCertificar
  Certificado
}

enum Rol {
  Instructor
  Coordinador
  Lider
  Seguimiento
}

enum Cargo {
  Instructor
  Aprendiz
  Coordinador
  Administrativo
}

enum Alternativa {
  Contrato_de_Aprendizaje
  Proyecto_Productivo
  Pasantias
  Monitoria
}

enum EstadoProductiva {
  Inicio
  Renuncia
  Terminado
}

enum Nivel {
  Tecnico
  Tecnologo
  Auxiliar
  Especializacion
}

enum EstadoFicha {
  activa
  terminada
}

enum SeguimientoEnum {
  visita
  llamada
  documento
  otra
}

enum EstadoSeguimiento {
  solicitud
  aprobado
  no_aprobado
}

enum Tipo {
  Vinculacion
  Contratista
}
